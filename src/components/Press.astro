---
interface Props {
    article: any;
    isNewest?: boolean;
}

const { article, isNewest = false } = Astro.props;
const { Content } = await article.render();

const authors = [
    {
        name: "Eli Newlin",
        profile_pic_uri: "https://avatars.githubusercontent.com/u/43016438?v=4",
    },
    {
        name: "Seth Traman",
        profile_pic_uri: "https://avatars.githubusercontent.com/u/11356884?v=4",
    },
];

const authorData = authors.find(a => a.name === article.data.author);
const isCombinedAuthors = article.data.author === "Eli Newlin & Seth Traman";
---

<article class="component-article-card">
    <div class="article-content">
        <div class="article-hero">
            <img src={article.data.img} alt={article.data.title} class="article-cover" />
            <div class="article-overlay"></div>
            <div class="article-overlay-content">
                <h1 class="article-title">
                    {article.data.title}
                    {isNewest && (
                        <span class="newest-badge">Latest</span>
                    )}
                </h1>
                <div class="article-meta">
                    <div class="article-author">
                        {isCombinedAuthors ? (
                            <div class="author-pics-combined">
                                {authors.map((authorInfo) => (
                                    <img class="author-profile-pic" src={authorInfo.profile_pic_uri} alt={authorInfo.name} />
                                ))}
                            </div>
                        ) : (
                            authorData && (
                                <img class="author-profile-pic" src={authorData.profile_pic_uri} alt={article.data.author} />
                            )
                        )}
                        <span>By {article.data.author}</span>
                    </div>
                    <time class="article-date" datetime={article.data.date}>{article.data.date}</time>
                </div>
            </div>
            
            <div class="zigzag-cutter"></div>
        </div>
        
        <div class="article-body">
            <div class="article-text">
                <Content />
            </div>
        </div>
    </div>
</article>

<script>
// Detect if first paragraph is multi-line and has no preceding header
function setupDropCaps() {
    const firstP = document.querySelector('.article-text p:first-of-type') as HTMLElement;
    if (!firstP) return;
    
    // Check if there's a header before the first paragraph
    const articleText = document.querySelector('.article-text') as HTMLElement;
    if (!articleText) return;
    
    // Get all elements in the article text
    const allElements = Array.from(articleText.children);
    const firstPIndex = allElements.indexOf(firstP);
    
    // Check if any element before the first paragraph is a header
    let hasHeaderBefore = false;
    for (let i = 0; i < firstPIndex; i++) {
        const element = allElements[i];
        if (element.tagName && ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'].includes(element.tagName)) {
            hasHeaderBefore = true;
            break;
        }
    }
    
    // If there's a header before, don't show drop cap
    if (hasHeaderBefore) {
        return;
    }
    
    // Check if paragraph height indicates multiple lines
    // We temporarily remove any existing drop cap to get accurate measurement
    firstP.style.setProperty('--temp-first-letter-size', '1em');
    
    // Measure the height - if it's more than ~2.2 line heights, it's multi-line
    const lineHeight = parseFloat(getComputedStyle(firstP).lineHeight) || 28.8; // fallback to 1.8 * 16px
    const paragraphHeight = firstP.offsetHeight;
    const threshold = lineHeight * 2.2; // Allow for 2+ lines
    
    // Reset temporary style
    firstP.style.removeProperty('--temp-first-letter-size');
    
    // Add class if multi-line AND no header before
    if (paragraphHeight > threshold) {
        firstP.classList.add('multi-line');
    }
}

// Run on page load and when content might change
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupDropCaps);
} else {
    setupDropCaps();
}
</script>

<style>
/* Clean editorial layout with full-width hero */
.component-article-card {
    width: 100%;
    height: 100%;
    background: #1a1d23;
}

.article-content {
    height: 100%;
    overflow-y: auto;
    background: #1a1d23;
    padding: 0;
}

.article-hero {
    width: 100%;
    margin: 0;
    padding: 0;
    position: relative;
}

.article-cover {
    width: 100%;
    height: auto;
    display: block;
    margin-top: 0;
    max-height: calc(61.8vh + 2rem);
    object-fit: cover;
}

.article-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 60%;
    background: linear-gradient(to top, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.6) 50%, rgba(0,0,0,0.2) 80%, transparent 100%);
    backdrop-filter: blur(1px);
}

.article-overlay-content {
    position: absolute;
    bottom: 2rem;
    left: 0;
    right: 0;
    padding: 3rem 4rem 2rem 4rem;
    color: white;
}

.article-body {
    padding: 4rem;
    background: #1a1d23;
    line-height: 1.8;
    font-size: 1.125rem;
    color: #e5e7eb;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', system-ui, sans-serif;
    animation: fadeInUp 0.8s ease-out;
    margin-top: 0;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}


.article-overlay-content .article-title {
    font-size: 3rem;
    font-weight: 800;
    line-height: 1.1;
    margin: 0 0 1rem 0;
    color: #ffffff;
    letter-spacing: -0.03em;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', system-ui, sans-serif;
    text-shadow: 0 2px 12px rgba(0,0,0,0.9), 0 1px 4px rgba(0,0,0,0.8);
    text-align: left;
}

.article-overlay-content .article-meta {
    display: flex;
    gap: 2rem;
    align-items: center;
    font-size: 1rem;
    color: rgba(255, 255, 255, 0.9);
    font-weight: 500;
    text-shadow: 0 1px 4px rgba(0,0,0,0.8);
}

.article-overlay-content .article-author {
    color: #ffffff;
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.article-overlay-content .author-profile-pic {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.3);
}

.article-overlay-content .author-pics-combined {
    display: flex;
    gap: 0.5rem;
}

.article-overlay-content .author-pics-combined .author-profile-pic {
    width: 1.75rem;
    height: 1.75rem;
}

.newest-badge {
    display: inline-block;
    background: linear-gradient(135deg, rgb(136, 58, 234), rgb(224, 204, 250));
    color: white;
    font-size: 0.4em;
    font-weight: 700;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    box-shadow: 0 4px 12px rgba(136, 58, 234, 0.4);
    text-shadow: 0 1px 2px rgba(0,0,0,0.15);
    white-space: nowrap;
    line-height: 1.2;
    vertical-align: middle;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', system-ui, sans-serif;
    word-spacing: normal;
}

.article-overlay-content .article-date {
    color: rgba(255, 255, 255, 0.8);
}

/* Upward-pointing zig-zag cutter */
.zigzag-cutter {
    width: 100%;
    height: 2rem;
    position: absolute;
    bottom: -2px;
    left: 0;
    background: #1a1d23;
    clip-path: polygon(0% 100%, 6.25% 0%, 12.5% 100%, 18.75% 0%, 25% 100%, 31.25% 0%, 37.5% 100%, 43.75% 0%, 50% 100%, 56.25% 0%, 62.5% 100%, 68.75% 0%, 75% 100%, 81.25% 0%, 87.5% 100%, 93.75% 0%, 100% 100%, 100% 100%, 0% 100%);
}

/* Small mobile: 4 zigs */
@media (max-width: 900px) {
    .article-cover {
        max-height: calc(65vh + 2rem);
    }
    .zigzag-cutter {
        clip-path: polygon(0% 100%, 12.5% 0%, 25% 100%, 37.5% 0%, 50% 100%, 62.5% 0%, 75% 100%, 87.5% 0%, 100% 100%, 100% 100%, 0% 100%);
    }
}

/* Tablet: 6 zigs */
@media (min-width: 769px) and (max-width: 1200px) {
    .article-cover {
        max-height: calc(65vh + 2rem);
    }
    .zigzag-cutter {
        clip-path: polygon(0% 100%, 8.33% 0%, 16.67% 100%, 25% 0%, 33.33% 100%, 41.67% 0%, 50% 100%, 58.33% 0%, 66.67% 100%, 75% 0%, 83.33% 100%, 91.67% 0%, 100% 100%, 100% 100%, 0% 100%);
    }
}

/* Desktop: 8 zigs (default already set above) */

:global(.article-text p) {
    margin-bottom: 1.1rem;
    line-height: 1.8;
    max-width: 65ch;
    transition: opacity 0.3s ease;
}

:global(.article-text p:hover) {
    opacity: 0.95;
}

:global(.article-text p:first-of-type) {
    position: relative;
}

/* Drop cap - elegant serif with very subtle brand gradient */
:global(.article-text p:first-of-type.multi-line::first-letter) {
    float: left;
    font-size: 4.2em;
    line-height: 0.75;
    margin: 0.18em 0.12em -0.08em 0;
    font-weight: 600;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
    font-family: Georgia, 'Times New Roman', Times, serif;
    background: linear-gradient(135deg, rgba(99, 102, 241, 0.5) 0%, #ffffff 70%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    position: relative;
    top: 0.15em;
}

:global(.article-text h1),
:global(.article-text h2),
:global(.article-text h3),
:global(.article-text h4) {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
    font-weight: 700;
    color: #ffffff;
    line-height: 1.3;
    margin: 1.5rem 0 0.558rem 0;
    position: relative;
    text-shadow: 0 2px 8px rgba(0,0,0,0.3);
    animation: slideInLeft 0.6s ease-out;
}

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

:global(.article-text h2),
:global(.article-text h3) {
    display: inline-block;
}

:global(.article-text h2::after),
:global(.article-text h3::after) {
    content: '';
    position: absolute;
    bottom: -0.5rem;
    left: 0;
    right: 0;
    height: 1px;
    background: rgba(139, 92, 246, 0.3);
    border-radius: 1px;
    opacity: 0.6;
}


:global(.article-text h1) { font-size: 2.25rem; }
:global(.article-text h2) { font-size: 1.875rem; }
:global(.article-text h3) { font-size: 1.5rem; }
:global(.article-text h4) { font-size: 1.25rem; }

:global(.article-text img) {
    max-width: 100%;
    height: auto;
    border-radius: 12px;
    margin: 2rem 0;
    box-shadow: 0 8px 32px rgba(0,0,0,0.3);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid rgba(99, 102, 241, 0.1);
}

:global(.article-text img:hover) {
    transform: translateY(-2px);
    box-shadow: 0 12px 40px rgba(0,0,0,0.4);
}

:global(.article-text ul),
:global(.article-text ol) {
    margin: 1.5rem 0;
    padding-left: 2rem;
    max-width: 65ch;
    position: relative;
}

:global(.article-text ul) {
    list-style: none;
}

:global(.article-text ul li) {
    margin-bottom: 0.75rem;
    position: relative;
    padding-left: 1.5rem;
    transition: all 0.2s ease;
}

:global(.article-text ul li::before) {
    content: '•';
    position: absolute;
    left: 0;
    top: 0;
    color: #6366f1;
    font-size: 1.2em;
    opacity: 0.8;
    transition: all 0.2s ease;
}

:global(.article-text ul li:hover::before) {
    color: #8b5cf6;
    transform: translateX(2px);
}

:global(.article-text ol li) {
    margin-bottom: 0.75rem;
    transition: all 0.2s ease;
    padding-left: 0.5rem;
}

:global(.article-text ol) {
    counter-reset: custom-counter;
}

:global(.article-text ol li) {
    counter-increment: custom-counter;
    list-style: none;
    position: relative;
}

:global(.article-text ol li::before) {
    content: counter(custom-counter);
    position: absolute;
    left: -2rem;
    top: 0;
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
    color: white;
    border-radius: 50%;
    width: 1.5rem;
    height: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8em;
    font-weight: 600;
    box-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);
}

:global(.article-text blockquote) {
    border-left: 4px solid #6366f1;
    padding: 1.5rem 2rem;
    margin: 2rem 0;
    font-style: italic;
    color: #d1d5db;
    background: rgba(99, 102, 241, 0.05);
    border-radius: 0 8px 8px 0;
    position: relative;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

:global(.article-text blockquote::before) {
    content: '"';
    position: absolute;
    top: -0.5rem;
    left: 1rem;
    font-size: 3rem;
    color: #6366f1;
    opacity: 0.3;
    line-height: 1;
}

:global(.article-text code) {
    background: #374151;
    padding: 0.35rem 0.6rem;
    border-radius: 6px;
    font-size: 0.9em;
    color: #f9fafb;
    border: 1px solid #4b5563;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
}

/* Remove background from code inside pre blocks to avoid double styling */
:global(.article-text pre code) {
    background: none;
    padding: 0;
    border: none;
    box-shadow: none;
}

/* Enhanced link styling for URLs */
:global(.article-text a) {
    color: #8b5cf6;
    text-decoration: none;
    border-bottom: 1px solid rgba(139, 92, 246, 0.3);
    transition: all 0.2s ease;
    font-weight: 500;
}

:global(.article-text a:hover) {
    color: #a855f7;
    border-bottom-color: rgba(168, 85, 247, 0.6);
    background: rgba(139, 92, 246, 0.05);
    padding: 0.1em 0.2em;
    margin: -0.1em -0.2em;
    border-radius: 4px;
}

.article-content pre {
    background: #374151;
    padding: 1.5rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 2rem 0;
}

.article-content pre code {
    background: none;
    padding: 0;
}

/* Desktop styles */
@media (min-width: 1201px) {
    .component-article-card {
        height: 100vh;
    }

    .article-content {
        height: 100vh;
        scrollbar-width: thin;
        scrollbar-color: #6366f1 #374151;
    }

    .article-content::-webkit-scrollbar {
        width: 8px;
    }

    .article-content::-webkit-scrollbar-track {
        background: #374151;
        border-radius: 4px;
    }

    .article-content::-webkit-scrollbar-thumb {
        background: #6366f1;
        border-radius: 4px;
    }

    .article-content::-webkit-scrollbar-thumb:hover {
        background: #4f46e5;
    }
}

/* Mobile responsive */
@media (max-width: 1200px) {
    .article-body {
        padding: 2rem;
        font-size: 1.0625rem;
    }
    
    .article-title {
        font-size: 2.25rem;
    }
    
    .article-cover {
        max-height: 65vh;
        object-position: center center;
    }
    
    .article-overlay {
        padding: 2.5rem 3rem 2rem 3rem;
        bottom: -1px;
    }
}

@media (max-width: 900px) {
    .article-overlay-content .article-title {
        font-size: 2.5rem;
    }
    
    .article-overlay {
        padding: 2rem 2.5rem 1.5rem 2.5rem;
        bottom: -1px;
    }
    
    .article-overlay-content .article-meta {
        gap: 1.25rem;
        font-size: 0.9rem;
    }
}

@media (max-width: 600px) {
    .article-overlay-content .article-title {
        font-size: 1.75rem;
    }
    
    .article-overlay {
        padding: 1.5rem 2rem 1rem 2rem;
        bottom: -1px;
    }
    
    .article-overlay-content .article-meta {
        justify-content: space-between;
        align-items: center;
        gap: 0.75rem;
    }
    
    /* Author stays on left, date gets pushed to right on same line */
    .article-overlay-content .article-author {
        flex: 1;
    }
    
    .article-overlay-content .article-date {
        flex-shrink: 0;
    }
    
}

@media (max-width: 400px) {
    .article-overlay-content .article-title {
        font-size: 1.5rem;
        line-height: 1.2;
    }
    
    .article-overlay {
        padding: 1rem 1.5rem 0.75rem 1.5rem;
        bottom: -1px;
    }
    
    .newest-badge {
        font-size: 0.5rem;
        padding: 0.25rem 0.5rem;
    }
}
</style>
