---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
import Press from "../../components/Press.astro";

// Access the props in this component
const { article } = Astro.props as { article: CollectionEntry<"article"> };

// Get all articles for the sidebar
const allArticles = await getCollection("article");

allArticles.sort((a, b) => {
  const dateA = new Date(a.data.date).getTime();
  const dateB = new Date(b.data.date).getTime();
  return dateB - dateA;
});

// This function gets called at build time and generates the paths from the content folder
export async function getStaticPaths() {
    // Define the colection you are creating pages for
    const allArticles = await getCollection("article");

    return allArticles.map((article) => {
        return {
            params: { slug: article.slug },
            //
            props: { article },
        };
    });
}
---

<Layout title={article.data.title} img={article.data.img}>
    <main>
        <div class="headers-layout">
            <h2 class="section-heading">{article.data.title}</h2>
            <h2 class="section-heading articles-header-desktop">Latest Articles</h2>
        </div>
        <div class="content-layout">
            <div class="press-section">
                <Press article={article} />
            </div>
            <div class="articles-section">
                <h2 class="section-heading articles-header-mobile">Latest Articles</h2>
                <ul class="card-grid">
                    {
                        allArticles.filter(art => art.slug !== 'about').map((art) => (
                            <Card
                                href={`${import.meta.env.BASE_URL}posts/${art.slug}`}
                                title={art.data.title}
                                img={art.data.img}
                                author={art.data.author}
                                isActive={art.slug === article.slug}
                            />
                        ))
                    }
                </ul>
                <div class="integrated-brand">
                    <div class="brand-section">
                        <a class="brand-link" href={`${import.meta.env.BASE_URL}`}>news++</a>
                        <span class="brand-divider">â€¢</span>
                        <span class="brand-by">by</span>
                    </div>
                    <div class="author-links">
                        <a class="author-link" href="https://github.com/R3lish0">
                            <img class="author-avatar" alt="R3lish0" src="https://avatars.githubusercontent.com/u/43016438?v=4" />
                            <span class="author-name">R3lish0</span>
                        </a>
                        <a class="author-link" href="https://github.com/stickyfingies">
                            <img class="author-avatar" alt="stickyfingies" src="https://avatars.githubusercontent.com/u/11356884?v=4" />
                            <span class="author-name">stickyfingies</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </main>
</Layout>
<style>
    @import url("https://fonts.googleapis.com/css2?family=Libre+Barcode+128+Text&display=swap");
    
    main {
        margin: auto;
        width: 95%;
        max-width: 120rem;
        color: white;
        font-size: 20px;
        line-height: 1.6;
        min-width: 15rem;
    }

    @media (min-width: 1201px) {
        main {
            margin-top: 0;
            padding: 0;
            width: 100%;
            max-width: none;
            height: 100vh;
            overflow: hidden;
        }
    }

    .headers-layout {
        display: flex;
        gap: 2rem;
        margin-top: 1rem;
        margin-bottom: 1.5rem;
    }

    .section-heading {
        flex: 1;
        font-size: 2.5rem;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        margin: 0;
        color: white;
    }

    .content-layout {
        display: flex;
        gap: 2rem;
        align-items: start;
        min-height: 80vh;
    }

    @media (min-width: 1201px) {
        .headers-layout {
            display: none;
        }
        
        .content-layout {
            height: 100vh;
            padding: 0;
            gap: 0;
            overflow: hidden;
        }
    }

    .press-section {
        flex: 1;
        max-width: 50%;
    }

    @media (min-width: 1201px) {
        .press-section {
            width: 60%;
            height: 100vh;
            max-width: none;
            display: flex;
            flex-direction: column;
        }
    }

    .articles-section {
        flex: 1;
        max-width: 50%;
    }

    @media (min-width: 1201px) {
        .articles-section {
            width: 40%;
            max-width: none;
            padding: 2rem;
            height: 100vh;
            position: relative;
            overflow-y: auto;
        }

        .articles-section::-webkit-scrollbar {
            width: 14px;
            -webkit-appearance: none;
        }

        .articles-section::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 6px;
            margin: 1rem 0;
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.1);
        }

        .articles-section::-webkit-scrollbar-thumb {
            background: linear-gradient(45deg, rgb(136, 58, 234), rgb(224, 204, 250));
            border-radius: 6px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            min-height: 30px;
        }

        .articles-section::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(45deg, rgb(156, 78, 254), rgb(244, 224, 255));
            box-shadow: 0 0 8px rgba(136, 58, 234, 0.3);
        }

        /* Force scrollbar to always be visible */
        .articles-section {
            overflow-y: scroll !important;
            scrollbar-gutter: stable;
            -ms-overflow-style: scrollbar;
        }

        /* Firefox scrollbar styling */
        .articles-section {
            scrollbar-width: thick;
            scrollbar-color: rgb(136, 58, 234) rgba(255, 255, 255, 0.05);
        }
    }

    h1 {
        font-size: 4rem;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        margin-bottom: 1em;
    }

    .card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));
        gap: 1rem;
        width: 100%;
        height: auto;
        margin: auto;
        padding-left: 0;
    }

    @media (min-width: 1201px) {
        .card-grid {
            padding-bottom: 8rem;
        }
    }

    .articles-header-mobile {
        display: none;
    }

    .articles-header-desktop {
        display: block;
    }

    @media (max-width: 1200px) {
        .headers-layout {
            flex-direction: column;
            gap: 1rem;
        }
        
        .articles-header-desktop {
            display: none;
        }
        
        .articles-header-mobile {
            display: block;
            margin-bottom: 2rem;
            text-align: center;
        }
        
        .content-layout {
            flex-direction: column;
            gap: 3rem;
        }
        
        .press-section,
        .articles-section {
            max-width: 100%;
        }
        
        .articles-section {
            width: 100%;
        }
        
        .card-grid {
            grid-template-columns: repeat(auto-fit, minmax(18rem, 1fr));
            gap: 2rem;
            justify-items: center;
        }
    }

    @media (max-width: 900px) {
        main {
            width: 100%;
        }
        .card-grid {
            grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
            gap: 1.5rem;
        }
    }

    @media (max-width: 600px) {
        .card-grid {
            grid-template-columns: repeat(auto-fit, minmax(14rem, 1fr));
            gap: 1.25rem;
        }
    }

    @media (max-width: 450px) {
        .card-grid {
            grid-template-columns: 1fr;
            justify-items: center;
            gap: 1rem;
        }
    }

    .integrated-brand {
        display: none;
    }

    @media (min-width: 1201px) {
        .integrated-brand {
            display: flex;
            flex-direction: row;
            gap: 1.5rem;
            align-items: center;
            justify-content: center;
            position: fixed;
            bottom: 0;
            left: 60%;
            right: 0;
            padding: 1.5rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            background: rgba(19, 21, 26, 0.95);
            backdrop-filter: blur(10px);
            white-space: nowrap;
            flex-wrap: nowrap;
        }
    }

    @media (min-width: 1201px) and (max-width: 1400px) {
        .integrated-brand {
            gap: 1rem;
            padding: 1.5rem 1rem;
        }
    }

    .brand-section {
        display: flex;
        align-items: center;
        gap: 1rem;
        font-size: 1.5rem;
        flex-shrink: 0;
    }

    @media (min-width: 1201px) and (max-width: 1400px) {
        .brand-section {
            gap: 0.75rem;
        }
    }

    .brand-link {
        font-family: "Libre Barcode 128 Text", system-ui;
        font-size: 2.5rem;
        color: #ddd;
        text-decoration: none;
        font-weight: 800;
        transition: color 0.3s ease, letter-spacing 0.3s ease;
    }

    .brand-link:hover {
        color: white;
        letter-spacing: 0.1em;
    }

    .brand-divider {
        color: #666;
        font-size: 1.5rem;
    }

    .brand-by {
        color: #aaa;
        font-size: 1.2rem;
    }

    .author-links {
        display: flex;
        gap: 2rem;
        flex-shrink: 0;
    }

    @media (min-width: 1201px) and (max-width: 1400px) {
        .author-links {
            gap: 1.5rem;
        }
    }

    .author-link {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        text-decoration: none;
        color: white;
        transition: transform 0.2s ease;
    }

    .author-link:hover {
        transform: translateY(-2px);
    }

    .author-avatar {
        width: 2rem;
        height: 2rem;
        border-radius: 50%;
        border: 2px solid rgba(255, 255, 255, 0.2);
        transition: border-color 0.2s ease;
    }

    .author-link:hover .author-avatar {
        border-color: white;
    }

    .author-name {
        font-size: 0.9rem;
        font-weight: 500;
    }
</style>
